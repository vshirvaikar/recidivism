### ICPSR California Dataset

I. Read the dataset and pull out usable columns.

data = read.dta("/Users/vik.shirvaikar/Desktop/Senior Thesis/Data/california.dta")
data = data[(data$V4 != 99 & data$V25 != 99), 4:27]
age = as.numeric(data$V4)
priors = as.numeric(data$V13)
aliases = as.numeric(data$V17)
prisontime = as.numeric(data$V25)
category = as.numeric(data$V7) - 1
  # sets "violator" as 0 and "original commitment" as 1
econ = 2 - as.numeric(data$V11)
  # sets illegal economic gain as 1 and no gain as 0
fiveyr = as.numeric(data$V14) - 1
  # sets five-year arrest-free period as 1 and no period as 0
opiate = 2 - as.numeric(data$V15)
  # sets history of opiate use as 1 and no use as 0
theft = 2 - as.numeric(data$V16)
  # sets checks/burglary offense as 1 and no offense as 0
type = as.numeric(data$V22)*3 + as.numeric(data$V23)*2 + as.numeric(data$V24)
typeR = as.data.frame(cbind(as.numeric(data$V22), as.numeric(data$V23), as.numeric(data$V24)))
colnames(typeR) = c("nuisance", "person", "property")
  # sets "other" as reference
recid = as.numeric(data$V5)

II. Compose the combined unsupervised (without recidivism) and supervised (with recidivism) datasets.

CAcluster = cbind.data.frame(age, priors, aliases, prisontime, category, econ, fiveyr, opiate, theft, type)
CAregress = cbind.data.frame(recid, age, priors, aliases, prisontime, category, econ, fiveyr, opiate, theft, typeR)

III. For the unsupervised dataset, normalize the numerical variables through division by the maximum value,
and process the categorical variables with target encoding.

CAcluster$age = CAcluster$age/max(CAcluster$age)
CAcluster$priors = CAcluster$priors/max(CAcluster$priors)
CAcluster$aliases = CAcluster$aliases/max(CAcluster$aliases)
CAcluster$prisontime = CAcluster$prisontime/max(CAcluster$prisontime)
CAbte_category = build_target_encoding(cbind(recid, category), cols_to_encode = "category", target_col = "recid")$category
CAcluster$category = CAbte_category$recid_mean_by_category[match(unlist(CAcluster$category), CAbte_category$category)]
CAbte_econ = build_target_encoding(cbind(recid, econ), cols_to_encode = "econ", target_col = "recid")$econ
CAcluster$econ = CAbte_econ$recid_mean_by_econ[match(unlist(CAcluster$econ), CAbte_econ$econ)]
CAbte_fiveyr = build_target_encoding(cbind(recid, fiveyr), cols_to_encode = "fiveyr", target_col = "recid")$fiveyr
CAcluster$fiveyr = CAbte_fiveyr$recid_mean_by_fiveyr[match(unlist(CAcluster$fiveyr), CAbte_fiveyr$fiveyr)]
CAbte_opiate = build_target_encoding(cbind(recid, opiate), cols_to_encode = "opiate", target_col = "recid")$opiate
CAcluster$opiate = CAbte_opiate$recid_mean_by_opiate[match(unlist(CAcluster$opiate), CAbte_opiate$opiate)]
CAbte_theft = build_target_encoding(cbind(recid, theft), cols_to_encode = "theft", target_col = "recid")$theft
CAcluster$theft = CAbte_theft$recid_mean_by_theft[match(unlist(CAcluster$theft), CAbte_theft$theft)]
CAbte_type = build_target_encoding(cbind(recid, type), cols_to_encode = "type", target_col = "recid")$type
CAcluster$type = CAbte_type$recid_mean_by_type[match(unlist(CAcluster$type), CAbte_type$type)]

cluster = CAcluster
regress = CAregress

CAsignal = array(0, c(30, 8))
for(k in 2:8){
  for(i in 1:30){
    set.seed(1000*i)
    signaltest = kmeans(CAcluster, centers=k)
    CAsignal[i, k] = signaltest$betweenss/signaltest$totss
  }
}
colMeans(CAsignal)

CAsignal5 = vector()
for(i in 1:10){
  shuffle = CAcluster[sample(nrow(CAcluster)), ]
  split = 0.9*dim(shuffle)[1]
  sample = data.frame(shuffle[1:floor(split), ])
  samplek = kmeans(sample, centers=5)
  CAsignal5 = append(CAsignal5, samplek$betweenss/samplek$totss)
}
mean(CAsignal5)
sd(CAsignal5)

set.seed(2020)
CAkmeans5 = kmeans(CAcluster, centers=5)
CAregress = cbind(CAregress, CAkmeans5$cluster)
CAcolsize = length(names(CAregress))-1
CAhotelling = array(0, c(5, 5))
for(i in 1:4){
  for(j in (i+1):5){
    clusterA = CAregress[CAkmeans5$cluster == i, 2:CAcolsize]
    clusterB = CAregress[CAkmeans5$cluster == j, 2:CAcolsize]
    test = hotelling.test(clusterA, clusterB)
    CAhotelling[i, j] = test$pval
  }
}

CAcluster1 = CAregress[CAkmeans5$cluster == 1, 1:CAcolsize]
CAcluster2 = CAregress[CAkmeans5$cluster == 2, 1:CAcolsize]
CAcluster3 = CAregress[CAkmeans5$cluster == 3, 1:CAcolsize]
CAcluster4 = CAregress[CAkmeans5$cluster == 4, 1:CAcolsize]
CAcluster5 = CAregress[CAkmeans5$cluster == 5, 1:CAcolsize]
CAcenters = rbind(colMeans(CAcluster1), colMeans(CAcluster2),
  colMeans(CAcluster3), colMeans(CAcluster4), colMeans(CAcluster5))
CAlog1 = glm(recid ~ ., family = "binomial", data = CAcluster1)
CAlog2 = glm(recid ~ ., family = "binomial", data = CAcluster2)
CAlog3 = glm(recid ~ ., family = "binomial", data = CAcluster3)
CAlog4 = glm(recid ~ ., family = "binomial", data = CAcluster4)
CAlog5 = glm(recid ~ ., family = "binomial", data = CAcluster5)
